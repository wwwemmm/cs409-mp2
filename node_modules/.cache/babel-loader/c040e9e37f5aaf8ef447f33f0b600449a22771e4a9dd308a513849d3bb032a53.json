{"ast":null,"code":"var _jsxFileName = \"/Users/wenmeiqi/Library/Mobile Documents/com~apple~CloudDocs/CS409/mp/mp2/src/components/GalleryView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GalleryView = () => {\n  _s();\n  const navigate = useNavigate();\n  const [pokemonByType, setPokemonByType] = useState([]);\n  const [allTypes, setAllTypes] = useState([]);\n  const [selectedType, setSelectedType] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchTypes = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Fetch all Pokémon types\n        const typesResponse = await fetch('https://pokeapi.co/api/v2/type');\n        const typesData = await typesResponse.json();\n\n        // Filter out types with no Pokémon and non-standard types\n        const validTypes = [];\n        for (const type of typesData.results) {\n          // Skip known empty/problematic types\n          if (['shadow', 'unknown', 'stellar'].includes(type.name)) {\n            continue;\n          }\n\n          // Check if this type has Pokémon\n          const typeResponse = await fetch(type.url);\n          const typeData = await typeResponse.json();\n          if (typeData.pokemon && typeData.pokemon.length > 0) {\n            validTypes.push(type);\n          }\n        }\n        setAllTypes(validTypes);\n        setLoading(false);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'An error occurred');\n        setLoading(false);\n      }\n    };\n    fetchTypes();\n  }, []);\n  useEffect(() => {\n    const fetchPokemonForType = async typeName => {\n      try {\n        setLoading(true);\n        setError(null);\n        const typeResponse = await fetch(`https://pokeapi.co/api/v2/type/${typeName}`);\n        const typeData = await typeResponse.json();\n\n        // Get all Pokémon from this type\n        const pokemonPromises = typeData.pokemon.map(async pokemonEntry => {\n          const pokemonResponse = await fetch(pokemonEntry.pokemon.url);\n          return pokemonResponse.json();\n        });\n        const pokemon = await Promise.all(pokemonPromises);\n        setPokemonByType([{\n          name: typeName,\n          pokemon: pokemon\n        }]);\n        setLoading(false);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'An error occurred');\n        setLoading(false);\n      }\n    };\n    if (selectedType) {\n      fetchPokemonForType(selectedType);\n    }\n  }, [selectedType]);\n  const handlePokemonClick = pokemon => {\n    navigate(`/pokemon/${pokemon.id}`);\n  };\n  const handleTypeClick = typeName => {\n    setSelectedType(typeName);\n  };\n  const getTypeColor = typeName => {\n    const colors = {\n      normal: '#A8A878',\n      fire: '#F08030',\n      water: '#6890F0',\n      electric: '#F8D030',\n      grass: '#78C850',\n      ice: '#98D8D8',\n      fighting: '#C03028',\n      poison: '#A040A0',\n      ground: '#E0C068',\n      flying: '#A890F0',\n      psychic: '#F85888',\n      bug: '#A8B820',\n      rock: '#B8A038',\n      ghost: '#705898',\n      dragon: '#7038F8',\n      dark: '#705848',\n      steel: '#B8B8D0',\n      fairy: '#EE99AC'\n    };\n    return colors[typeName] || '#68A090';\n  };\n  const getFallbackSprite = pokemon => {\n    // For Koraidon variants, use base Koraidon sprite\n    if (pokemon.name.includes('koraidon')) {\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1007.png';\n    }\n    // For other Pokémon, try the standard sprite\n    return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`;\n  };\n  if (loading && !selectedType) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"nav-button\",\n          children: \"List View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/gallery\",\n          className: \"nav-button active\",\n          children: \"Gallery View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Loading Pok\\xE9mon types...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"nav-button\",\n          children: \"List View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/gallery\",\n          className: \"nav-button active\",\n          children: \"Gallery View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"nav-button\",\n        children: \"List View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/gallery\",\n        className: \"nav-button active\",\n        children: \"Gallery View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Pok\\xE9mon by Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"type-selection\",\n        children: allTypes.map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `type-button ${selectedType === type.name ? 'active' : ''}`,\n          onClick: () => handleTypeClick(type.name),\n          style: {\n            backgroundColor: selectedType === type.name ? getTypeColor(type.name) : `${getTypeColor(type.name)}40`,\n            borderColor: getTypeColor(type.name),\n            color: selectedType === type.name ? 'white' : getTypeColor(type.name)\n          },\n          children: type.name.charAt(0).toUpperCase() + type.name.slice(1)\n        }, type.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), loading && selectedType && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [\"Loading \", selectedType, \" Pok\\xE9mon...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), pokemonByType.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon-display\",\n        children: pokemonByType.map(typeGroup => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"type-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"type-header\",\n            style: {\n              background: `linear-gradient(135deg, ${getTypeColor(typeGroup.name)}, ${getTypeColor(typeGroup.name)}88)`,\n              color: 'white'\n            },\n            children: [typeGroup.name.charAt(0).toUpperCase() + typeGroup.name.slice(1), \" Type Pok\\xE9mon\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pokemon-type-grid\",\n            children: typeGroup.pokemon.map(pokemon => {\n              var _pokemon$sprites$othe, _pokemon$sprites$othe2, _pokemon$sprites$othe3, _pokemon$sprites$othe4;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pokemon-gallery-item\",\n                onClick: () => handlePokemonClick(pokemon),\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pokemon-gallery-image\",\n                  style: {\n                    backgroundColor: `${getTypeColor(typeGroup.name)}20`\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: pokemon.sprites.front_default || ((_pokemon$sprites$othe = pokemon.sprites.other) === null || _pokemon$sprites$othe === void 0 ? void 0 : (_pokemon$sprites$othe2 = _pokemon$sprites$othe.home) === null || _pokemon$sprites$othe2 === void 0 ? void 0 : _pokemon$sprites$othe2.front_default) || ((_pokemon$sprites$othe3 = pokemon.sprites.other) === null || _pokemon$sprites$othe3 === void 0 ? void 0 : (_pokemon$sprites$othe4 = _pokemon$sprites$othe3.official_artwork) === null || _pokemon$sprites$othe4 === void 0 ? void 0 : _pokemon$sprites$othe4.front_default) || getFallbackSprite(pokemon),\n                    alt: pokemon.name,\n                    className: \"pokemon-gallery-sprite\",\n                    onError: e => {\n                      const target = e.target;\n                      target.src = getFallbackSprite(pokemon);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pokemon-gallery-name\",\n                  children: pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pokemon-gallery-id\",\n                  children: [\"#\", pokemon.id]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 23\n                }, this)]\n              }, pokemon.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this)]\n        }, typeGroup.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), !selectedType && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-selection\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a Pok\\xE9mon type above to see Pok\\xE9mon of that type!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n_s(GalleryView, \"PA2h99To5eREIRbuuMoncN36fVw=\", false, function () {\n  return [useNavigate];\n});\n_c = GalleryView;\nexport default GalleryView;\nvar _c;\n$RefreshReg$(_c, \"GalleryView\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","jsxDEV","_jsxDEV","GalleryView","_s","navigate","pokemonByType","setPokemonByType","allTypes","setAllTypes","selectedType","setSelectedType","loading","setLoading","error","setError","fetchTypes","typesResponse","fetch","typesData","json","validTypes","type","results","includes","name","typeResponse","url","typeData","pokemon","length","push","err","Error","message","fetchPokemonForType","typeName","pokemonPromises","map","pokemonEntry","pokemonResponse","Promise","all","handlePokemonClick","id","handleTypeClick","getTypeColor","colors","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","getFallbackSprite","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","backgroundColor","borderColor","color","charAt","toUpperCase","slice","typeGroup","background","_pokemon$sprites$othe","_pokemon$sprites$othe2","_pokemon$sprites$othe3","_pokemon$sprites$othe4","src","sprites","front_default","other","home","official_artwork","alt","onError","e","target","_c","$RefreshReg$"],"sources":["/Users/wenmeiqi/Library/Mobile Documents/com~apple~CloudDocs/CS409/mp/mp2/src/components/GalleryView.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\ninterface Pokemon {\n  id: number;\n  name: string;\n  types: Array<{\n    type: {\n      name: string;\n    };\n  }>;\n  sprites: {\n    front_default: string | null;\n    front_shiny: string | null;\n    other?: {\n      home?: {\n        front_default: string | null;\n      };\n      official_artwork?: {\n        front_default: string | null;\n      };\n    };\n  };\n}\n\ninterface PokemonType {\n  name: string;\n  pokemon: Pokemon[];\n}\n\nconst GalleryView: React.FC = () => {\n  const navigate = useNavigate();\n  const [pokemonByType, setPokemonByType] = useState<PokemonType[]>([]);\n  const [allTypes, setAllTypes] = useState<Array<{name: string, url: string}>>([]);\n  const [selectedType, setSelectedType] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchTypes = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Fetch all Pokémon types\n        const typesResponse = await fetch('https://pokeapi.co/api/v2/type');\n        const typesData = await typesResponse.json();\n        \n        // Filter out types with no Pokémon and non-standard types\n        const validTypes = [];\n        \n        for (const type of typesData.results) {\n          // Skip known empty/problematic types\n          if (['shadow', 'unknown', 'stellar'].includes(type.name)) {\n            continue;\n          }\n          \n          // Check if this type has Pokémon\n          const typeResponse = await fetch(type.url);\n          const typeData = await typeResponse.json();\n          \n          if (typeData.pokemon && typeData.pokemon.length > 0) {\n            validTypes.push(type);\n          }\n        }\n        \n        setAllTypes(validTypes);\n        setLoading(false);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'An error occurred');\n        setLoading(false);\n      }\n    };\n\n    fetchTypes();\n  }, []);\n\n  useEffect(() => {\n    const fetchPokemonForType = async (typeName: string) => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        const typeResponse = await fetch(`https://pokeapi.co/api/v2/type/${typeName}`);\n        const typeData = await typeResponse.json();\n        \n        // Get all Pokémon from this type\n        const pokemonPromises = typeData.pokemon.map(async (pokemonEntry: any) => {\n          const pokemonResponse = await fetch(pokemonEntry.pokemon.url);\n          return pokemonResponse.json();\n        });\n        \n        const pokemon = await Promise.all(pokemonPromises);\n        \n        setPokemonByType([{\n          name: typeName,\n          pokemon: pokemon\n        }]);\n        setLoading(false);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'An error occurred');\n        setLoading(false);\n      }\n    };\n\n    if (selectedType) {\n      fetchPokemonForType(selectedType);\n    }\n  }, [selectedType]);\n\n  const handlePokemonClick = (pokemon: Pokemon) => {\n    navigate(`/pokemon/${pokemon.id}`);\n  };\n\n  const handleTypeClick = (typeName: string) => {\n    setSelectedType(typeName);\n  };\n\n\n  const getTypeColor = (typeName: string): string => {\n    const colors: { [key: string]: string } = {\n      normal: '#A8A878',\n      fire: '#F08030',\n      water: '#6890F0',\n      electric: '#F8D030',\n      grass: '#78C850',\n      ice: '#98D8D8',\n      fighting: '#C03028',\n      poison: '#A040A0',\n      ground: '#E0C068',\n      flying: '#A890F0',\n      psychic: '#F85888',\n      bug: '#A8B820',\n      rock: '#B8A038',\n      ghost: '#705898',\n      dragon: '#7038F8',\n      dark: '#705848',\n      steel: '#B8B8D0',\n      fairy: '#EE99AC'\n    };\n    return colors[typeName] || '#68A090';\n  };\n\n  const getFallbackSprite = (pokemon: Pokemon): string => {\n    // For Koraidon variants, use base Koraidon sprite\n    if (pokemon.name.includes('koraidon')) {\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1007.png';\n    }\n    // For other Pokémon, try the standard sprite\n    return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`;\n  };\n\n  if (loading && !selectedType) {\n    return (\n      <div className=\"gallery-view\">\n        <div className=\"button-container\">\n          <Link to=\"/\" className=\"nav-button\">\n            List View\n          </Link>\n          <Link to=\"/gallery\" className=\"nav-button active\">\n            Gallery View\n          </Link>\n        </div>\n        <div className=\"gallery-container\">\n          <div className=\"loading\">Loading Pokémon types...</div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"gallery-view\">\n        <div className=\"button-container\">\n          <Link to=\"/\" className=\"nav-button\">\n            List View\n          </Link>\n          <Link to=\"/gallery\" className=\"nav-button active\">\n            Gallery View\n          </Link>\n        </div>\n        <div className=\"gallery-container\">\n          <div className=\"error-message\">{error}</div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"gallery-view\">\n      <div className=\"button-container\">\n        <Link to=\"/\" className=\"nav-button\">\n          List View\n        </Link>\n        <Link to=\"/gallery\" className=\"nav-button active\">\n          Gallery View\n        </Link>\n      </div>\n      \n      <div className=\"gallery-container\">\n        <h2>Pokémon by Type</h2>\n        \n        {/* Type Selection Buttons */}\n        <div className=\"type-selection\">\n          {allTypes.map((type) => (\n            <button\n              key={type.name}\n              className={`type-button ${selectedType === type.name ? 'active' : ''}`}\n              onClick={() => handleTypeClick(type.name)}\n              style={{\n                backgroundColor: selectedType === type.name ? getTypeColor(type.name) : `${getTypeColor(type.name)}40`,\n                borderColor: getTypeColor(type.name),\n                color: selectedType === type.name ? 'white' : getTypeColor(type.name)\n              }}\n            >\n              {type.name.charAt(0).toUpperCase() + type.name.slice(1)}\n            </button>\n          ))}\n        </div>\n\n        {/* Loading state for selected type */}\n        {loading && selectedType && (\n          <div className=\"loading\">Loading {selectedType} Pokémon...</div>\n        )}\n\n        {/* Pokemon Display */}\n        {pokemonByType.length > 0 && (\n          <div className=\"pokemon-display\">\n            {pokemonByType.map((typeGroup) => (\n              <div key={typeGroup.name} className=\"type-section\">\n                <h3 \n                  className=\"type-header\"\n                  style={{ \n                    background: `linear-gradient(135deg, ${getTypeColor(typeGroup.name)}, ${getTypeColor(typeGroup.name)}88)`,\n                    color: 'white'\n                  }}\n                >\n                  {typeGroup.name.charAt(0).toUpperCase() + typeGroup.name.slice(1)} Type Pokémon\n                </h3>\n                <div className=\"pokemon-type-grid\">\n                  {typeGroup.pokemon.map((pokemon) => (\n                    <div \n                      key={pokemon.id} \n                      className=\"pokemon-gallery-item\"\n                      onClick={() => handlePokemonClick(pokemon)}\n                    >\n                      <div \n                        className=\"pokemon-gallery-image\"\n                        style={{ backgroundColor: `${getTypeColor(typeGroup.name)}20` }}\n                      >\n                        <img \n                          src={pokemon.sprites.front_default || pokemon.sprites.other?.home?.front_default || pokemon.sprites.other?.official_artwork?.front_default || getFallbackSprite(pokemon)}\n                          alt={pokemon.name}\n                          className=\"pokemon-gallery-sprite\"\n                          onError={(e) => {\n                            const target = e.target as HTMLImageElement;\n                            target.src = getFallbackSprite(pokemon);\n                          }}\n                        />\n                      </div>\n                      <div className=\"pokemon-gallery-name\">\n                        {pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)}\n                      </div>\n                      <div className=\"pokemon-gallery-id\">#{pokemon.id}</div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {/* No selection message */}\n        {!selectedType && !loading && (\n          <div className=\"no-selection\">\n            <p>Select a Pokémon type above to see Pokémon of that type!</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default GalleryView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}