{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link,useNavigate}from'react-router-dom';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GalleryView=()=>{const navigate=useNavigate();const[pokemonByType,setPokemonByType]=useState([]);const[allTypes,setAllTypes]=useState([]);const[selectedType,setSelectedType]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);console.log('GalleryView rendered:',{allTypes:allTypes.length,selectedType,loading,error});useEffect(()=>{const fetchTypes=async()=>{try{setLoading(true);setError(null);setSelectedType(null);setPokemonByType([]);// Fetch all Pokémon types\nconst typesResponse=await axios.get('https://pokeapi.co/api/v2/type');const typesData=typesResponse.data;// Filter out types with no Pokémon and non-standard types\nconst validTypes=[];for(const type of typesData.results){// Skip known empty/problematic types\nif(['shadow','unknown','stellar'].includes(type.name)){continue;}// Check if this type has Pokémon\nconst typeResponse=await axios.get(type.url);const typeData=typeResponse.data;if(typeData.pokemon&&typeData.pokemon.length>0){validTypes.push(type);}}setAllTypes(validTypes);setLoading(false);}catch(err){setError(err instanceof Error?err.message:'An error occurred');setLoading(false);}};fetchTypes();},[]);useEffect(()=>{const fetchPokemonForType=async typeName=>{try{setLoading(true);setError(null);const typeResponse=await axios.get(\"https://pokeapi.co/api/v2/type/\".concat(typeName));const typeData=typeResponse.data;// Get all Pokémon from this type\nconst pokemonPromises=typeData.pokemon.map(async pokemonEntry=>{const pokemonResponse=await axios.get(pokemonEntry.pokemon.url);return pokemonResponse.data;});const pokemon=await Promise.all(pokemonPromises);setPokemonByType([{name:typeName,pokemon:pokemon}]);setLoading(false);}catch(err){setError(err instanceof Error?err.message:'An error occurred');setLoading(false);}};if(selectedType){fetchPokemonForType(selectedType);}},[selectedType]);const handlePokemonClick=pokemon=>{navigate(\"/pokemon/\".concat(pokemon.name.toLowerCase()));};const handleTypeClick=typeName=>{setSelectedType(typeName);};const getTypeColor=typeName=>{const colors={normal:'#A8A878',fire:'#F08030',water:'#6890F0',electric:'#F8D030',grass:'#78C850',ice:'#98D8D8',fighting:'#C03028',poison:'#A040A0',ground:'#E0C068',flying:'#A890F0',psychic:'#F85888',bug:'#A8B820',rock:'#B8A038',ghost:'#705898',dragon:'#7038F8',dark:'#705848',steel:'#B8B8D0',fairy:'#EE99AC'};return colors[typeName]||'#68A090';};const getFallbackSprite=pokemon=>{var _pokemon$sprites$othe,_pokemon$sprites$othe2,_pokemon$sprites$othe3,_pokemon$sprites$othe4;// Try multiple sprite sources first\nconst spriteSources=[pokemon.sprites.front_default,(_pokemon$sprites$othe=pokemon.sprites.other)===null||_pokemon$sprites$othe===void 0?void 0:(_pokemon$sprites$othe2=_pokemon$sprites$othe.home)===null||_pokemon$sprites$othe2===void 0?void 0:_pokemon$sprites$othe2.front_default,(_pokemon$sprites$othe3=pokemon.sprites.other)===null||_pokemon$sprites$othe3===void 0?void 0:(_pokemon$sprites$othe4=_pokemon$sprites$othe3.official_artwork)===null||_pokemon$sprites$othe4===void 0?void 0:_pokemon$sprites$othe4.front_default,pokemon.sprites.front_shiny].filter(Boolean);if(spriteSources.length>0){return spriteSources[0];}// For Koraidon variants, use base Koraidon sprite\nif(pokemon.name.includes('koraidon')){return'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1007.png';}// For Miraidon variants, use base Miraidon sprite\nif(pokemon.name.includes('miraidon')){return'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1008.png';}// For special Pikachu forms, use base Pikachu sprite\nif(pokemon.name.includes('pikachu')&&pokemon.name!=='pikachu'){return'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png';}// For Toxtricity variants, use base Toxtricity sprite\nif(pokemon.name.includes('toxtricity')&&pokemon.name!=='toxtricity'){return'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/849.png';}// For Morpeko variants, use base Morpeko sprite\nif(pokemon.name.includes('morpeko')&&pokemon.name!=='morpeko'){return'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/877.png';}// For Voltorb/Electrode Hisui forms, use base forms\nif(pokemon.name.includes('voltorb-hisui')){return'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/100.png';}if(pokemon.name.includes('electrode-hisui')){return'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/101.png';}// For Togedemaru variants, use base Togedemaru sprite\nif(pokemon.name.includes('togedemaru')&&pokemon.name!=='togedemaru'){return'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/777.png';}// For other Pokémon, try the standard sprite\nreturn\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\".concat(pokemon.id,\".png\");};if(loading&&!selectedType){return/*#__PURE__*/_jsxs(\"div\",{className:\"gallery-view\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"nav-button\",children:\"Search\"}),/*#__PURE__*/_jsx(Link,{to:\"/gallery\",className:\"nav-button active\",children:\"Gallery\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"gallery-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading Pok\\xE9mon types...\"})})]});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"gallery-view\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"nav-button\",children:\"Search\"}),/*#__PURE__*/_jsx(Link,{to:\"/gallery\",className:\"nav-button active\",children:\"Gallery\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"gallery-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error})})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"gallery-view\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"nav-button\",children:\"Search\"}),/*#__PURE__*/_jsx(Link,{to:\"/gallery\",className:\"nav-button active\",children:\"Gallery\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"gallery-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Pok\\xE9mon by Type\"}),/*#__PURE__*/_jsx(\"div\",{className:\"type-selection\",children:allTypes.map(type=>/*#__PURE__*/_jsx(\"button\",{className:\"type-button \".concat(type.name,\" \").concat(selectedType===type.name?'active':''),onClick:()=>handleTypeClick(type.name),children:type.name.charAt(0).toUpperCase()+type.name.slice(1)},type.name))}),loading&&selectedType&&/*#__PURE__*/_jsxs(\"div\",{className:\"loading\",children:[\"Loading \",selectedType,\" Pok\\xE9mon...\"]}),!selectedType&&!loading&&allTypes.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"type-selection-message\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Select a Pok\\xE9mon type above to view Pok\\xE9mon of that type.\"})}),pokemonByType.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"pokemon-display\",children:pokemonByType.map(typeGroup=>/*#__PURE__*/_jsxs(\"div\",{className:\"type-section\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"type-header \".concat(typeGroup.name),children:[typeGroup.name.charAt(0).toUpperCase()+typeGroup.name.slice(1),\" Type Pok\\xE9mon\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"pokemon-type-grid\",children:typeGroup.pokemon.map(pokemon=>{var _pokemon$sprites$othe5,_pokemon$sprites$othe6,_pokemon$sprites$othe7,_pokemon$sprites$othe8;return/*#__PURE__*/_jsxs(\"div\",{className:\"pokemon-gallery-item\",onClick:()=>handlePokemonClick(pokemon),children:[/*#__PURE__*/_jsx(\"div\",{className:\"pokemon-gallery-image \".concat(typeGroup.name),children:/*#__PURE__*/_jsx(\"img\",{src:pokemon.sprites.front_default||((_pokemon$sprites$othe5=pokemon.sprites.other)===null||_pokemon$sprites$othe5===void 0?void 0:(_pokemon$sprites$othe6=_pokemon$sprites$othe5.home)===null||_pokemon$sprites$othe6===void 0?void 0:_pokemon$sprites$othe6.front_default)||((_pokemon$sprites$othe7=pokemon.sprites.other)===null||_pokemon$sprites$othe7===void 0?void 0:(_pokemon$sprites$othe8=_pokemon$sprites$othe7.official_artwork)===null||_pokemon$sprites$othe8===void 0?void 0:_pokemon$sprites$othe8.front_default)||getFallbackSprite(pokemon),alt:pokemon.name,className:\"pokemon-gallery-sprite\",onError:e=>{const target=e.target;target.src=getFallbackSprite(pokemon);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"pokemon-gallery-name\",children:pokemon.name.charAt(0).toUpperCase()+pokemon.name.slice(1)}),/*#__PURE__*/_jsxs(\"div\",{className:\"pokemon-gallery-id\",children:[\"#\",pokemon.id]})]},pokemon.id);})})]},typeGroup.name))}),!selectedType&&!loading&&/*#__PURE__*/_jsx(\"div\",{className:\"no-selection\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Select a Pok\\xE9mon type above to see Pok\\xE9mon of that type!\"})})]})]});};export default GalleryView;","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","GalleryView","navigate","pokemonByType","setPokemonByType","allTypes","setAllTypes","selectedType","setSelectedType","loading","setLoading","error","setError","console","log","length","fetchTypes","typesResponse","get","typesData","data","validTypes","type","results","includes","name","typeResponse","url","typeData","pokemon","push","err","Error","message","fetchPokemonForType","typeName","concat","pokemonPromises","map","pokemonEntry","pokemonResponse","Promise","all","handlePokemonClick","toLowerCase","handleTypeClick","getTypeColor","colors","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","getFallbackSprite","_pokemon$sprites$othe","_pokemon$sprites$othe2","_pokemon$sprites$othe3","_pokemon$sprites$othe4","spriteSources","sprites","front_default","other","home","official_artwork","front_shiny","filter","Boolean","id","className","children","to","onClick","charAt","toUpperCase","slice","typeGroup","_pokemon$sprites$othe5","_pokemon$sprites$othe6","_pokemon$sprites$othe7","_pokemon$sprites$othe8","src","alt","onError","e","target"],"sources":["/Users/wenmeiqi/Library/Mobile Documents/com~apple~CloudDocs/CS409/mp/mp2/src/components/GalleryView.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\ninterface Pokemon {\n  id: number;\n  name: string;\n  types: Array<{\n    type: {\n      name: string;\n    };\n  }>;\n  sprites: {\n    front_default: string | null;\n    front_shiny: string | null;\n    other?: {\n      home?: {\n        front_default: string | null;\n      };\n      official_artwork?: {\n        front_default: string | null;\n      };\n    };\n  };\n}\n\ninterface PokemonType {\n  name: string;\n  pokemon: Pokemon[];\n}\n\nconst GalleryView: React.FC = () => {\n  const navigate = useNavigate();\n  const [pokemonByType, setPokemonByType] = useState<PokemonType[]>([]);\n  const [allTypes, setAllTypes] = useState<Array<{name: string, url: string}>>([]);\n  const [selectedType, setSelectedType] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  console.log('GalleryView rendered:', { allTypes: allTypes.length, selectedType, loading, error });\n\n  useEffect(() => {\n    const fetchTypes = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        setSelectedType(null);\n        setPokemonByType([]);\n\n        // Fetch all Pokémon types\n        const typesResponse = await axios.get('https://pokeapi.co/api/v2/type');\n        const typesData = typesResponse.data;\n        \n        // Filter out types with no Pokémon and non-standard types\n        const validTypes = [];\n        \n        for (const type of typesData.results) {\n          // Skip known empty/problematic types\n          if (['shadow', 'unknown', 'stellar'].includes(type.name)) {\n            continue;\n          }\n          \n          // Check if this type has Pokémon\n          const typeResponse = await axios.get(type.url);\n          const typeData = typeResponse.data;\n          \n          if (typeData.pokemon && typeData.pokemon.length > 0) {\n            validTypes.push(type);\n          }\n        }\n        \n        setAllTypes(validTypes);\n        setLoading(false);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'An error occurred');\n        setLoading(false);\n      }\n    };\n\n    fetchTypes();\n  }, []);\n\n  useEffect(() => {\n    const fetchPokemonForType = async (typeName: string) => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        const typeResponse = await axios.get(`https://pokeapi.co/api/v2/type/${typeName}`);\n        const typeData = typeResponse.data;\n        \n        // Get all Pokémon from this type\n        const pokemonPromises = typeData.pokemon.map(async (pokemonEntry: any) => {\n          const pokemonResponse = await axios.get(pokemonEntry.pokemon.url);\n          return pokemonResponse.data;\n        });\n        \n        const pokemon = await Promise.all(pokemonPromises);\n        \n        setPokemonByType([{\n          name: typeName,\n          pokemon: pokemon\n        }]);\n        setLoading(false);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'An error occurred');\n        setLoading(false);\n      }\n    };\n\n    if (selectedType) {\n      fetchPokemonForType(selectedType);\n    }\n  }, [selectedType]);\n\n  const handlePokemonClick = (pokemon: Pokemon) => {\n    navigate(`/pokemon/${pokemon.name.toLowerCase()}`);\n  };\n\n  const handleTypeClick = (typeName: string) => {\n    setSelectedType(typeName);\n  };\n\n\n  const getTypeColor = (typeName: string): string => {\n    const colors: { [key: string]: string } = {\n      normal: '#A8A878',\n      fire: '#F08030',\n      water: '#6890F0',\n      electric: '#F8D030',\n      grass: '#78C850',\n      ice: '#98D8D8',\n      fighting: '#C03028',\n      poison: '#A040A0',\n      ground: '#E0C068',\n      flying: '#A890F0',\n      psychic: '#F85888',\n      bug: '#A8B820',\n      rock: '#B8A038',\n      ghost: '#705898',\n      dragon: '#7038F8',\n      dark: '#705848',\n      steel: '#B8B8D0',\n      fairy: '#EE99AC'\n    };\n    return colors[typeName] || '#68A090';\n  };\n\n  const getFallbackSprite = (pokemon: Pokemon): string => {\n    // Try multiple sprite sources first\n    const spriteSources = [\n      pokemon.sprites.front_default,\n      pokemon.sprites.other?.home?.front_default,\n      pokemon.sprites.other?.official_artwork?.front_default,\n      pokemon.sprites.front_shiny\n    ].filter(Boolean);\n\n    if (spriteSources.length > 0) {\n      return spriteSources[0] as string;\n    }\n\n    // For Koraidon variants, use base Koraidon sprite\n    if (pokemon.name.includes('koraidon')) {\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1007.png';\n    }\n    // For Miraidon variants, use base Miraidon sprite\n    if (pokemon.name.includes('miraidon')) {\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1008.png';\n    }\n    // For special Pikachu forms, use base Pikachu sprite\n    if (pokemon.name.includes('pikachu') && pokemon.name !== 'pikachu') {\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png';\n    }\n    // For Toxtricity variants, use base Toxtricity sprite\n    if (pokemon.name.includes('toxtricity') && pokemon.name !== 'toxtricity') {\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/849.png';\n    }\n    // For Morpeko variants, use base Morpeko sprite\n    if (pokemon.name.includes('morpeko') && pokemon.name !== 'morpeko') {\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/877.png';\n    }\n    // For Voltorb/Electrode Hisui forms, use base forms\n    if (pokemon.name.includes('voltorb-hisui')) {\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/100.png';\n    }\n    if (pokemon.name.includes('electrode-hisui')) {\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/101.png';\n    }\n    // For Togedemaru variants, use base Togedemaru sprite\n    if (pokemon.name.includes('togedemaru') && pokemon.name !== 'togedemaru') {\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/777.png';\n    }\n    // For other Pokémon, try the standard sprite\n    return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`;\n  };\n\n  if (loading && !selectedType) {\n    return (\n      <div className=\"gallery-view\">\n        <div className=\"button-container\">\n          <Link to=\"/\" className=\"nav-button\">\n            Search\n          </Link>\n          <Link to=\"/gallery\" className=\"nav-button active\">\n            Gallery\n          </Link>\n        </div>\n        <div className=\"gallery-container\">\n          <div className=\"loading\">Loading Pokémon types...</div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"gallery-view\">\n        <div className=\"button-container\">\n          <Link to=\"/\" className=\"nav-button\">\n            Search\n          </Link>\n          <Link to=\"/gallery\" className=\"nav-button active\">\n            Gallery\n          </Link>\n        </div>\n        <div className=\"gallery-container\">\n          <div className=\"error-message\">{error}</div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"gallery-view\">\n      <div className=\"button-container\">\n        <Link to=\"/\" className=\"nav-button\">\n          Search\n        </Link>\n        <Link to=\"/gallery\" className=\"nav-button active\">\n          Gallery\n        </Link>\n      </div>\n      \n      <div className=\"gallery-container\">\n        <h2>Pokémon by Type</h2>\n        \n        {/* Type Selection Buttons */}\n        <div className=\"type-selection\">\n          {allTypes.map((type) => (\n            <button\n              key={type.name}\n              className={`type-button ${type.name} ${selectedType === type.name ? 'active' : ''}`}\n              onClick={() => handleTypeClick(type.name)}\n            >\n              {type.name.charAt(0).toUpperCase() + type.name.slice(1)}\n            </button>\n          ))}\n        </div>\n\n        {/* Loading state for selected type */}\n        {loading && selectedType && (\n          <div className=\"loading\">Loading {selectedType} Pokémon...</div>\n        )}\n\n        {/* Message when no type is selected */}\n        {!selectedType && !loading && allTypes.length > 0 && (\n          <div className=\"type-selection-message\">\n            <p>Select a Pokémon type above to view Pokémon of that type.</p>\n          </div>\n        )}\n\n        {/* Pokemon Display */}\n        {pokemonByType.length > 0 && (\n          <div className=\"pokemon-display\">\n            {pokemonByType.map((typeGroup) => (\n              <div key={typeGroup.name} className=\"type-section\">\n                <h3 className={`type-header ${typeGroup.name}`}>\n                  {typeGroup.name.charAt(0).toUpperCase() + typeGroup.name.slice(1)} Type Pokémon\n                </h3>\n                <div className=\"pokemon-type-grid\">\n                  {typeGroup.pokemon.map((pokemon) => (\n                    <div \n                      key={pokemon.id} \n                      className=\"pokemon-gallery-item\"\n                      onClick={() => handlePokemonClick(pokemon)}\n                    >\n                      <div className={`pokemon-gallery-image ${typeGroup.name}`}>\n                        <img \n                          src={pokemon.sprites.front_default || pokemon.sprites.other?.home?.front_default || pokemon.sprites.other?.official_artwork?.front_default || getFallbackSprite(pokemon)}\n                          alt={pokemon.name}\n                          className=\"pokemon-gallery-sprite\"\n                          onError={(e) => {\n                            const target = e.target as HTMLImageElement;\n                            target.src = getFallbackSprite(pokemon);\n                          }}\n                        />\n                      </div>\n                      <div className=\"pokemon-gallery-name\">\n                        {pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)}\n                      </div>\n                      <div className=\"pokemon-gallery-id\">#{pokemon.id}</div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {/* No selection message */}\n        {!selectedType && !loading && (\n          <div className=\"no-selection\">\n            <p>Select a Pokémon type above to see Pokémon of that type!</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default GalleryView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}