{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ListView=()=>{const[searchTerm,setSearchTerm]=useState('');const[pokemon,setPokemon]=useState(null);const[pokemonList,setPokemonList]=useState([]);const[allPokemon,setAllPokemon]=useState([]);const[filteredSuggestions,setFilteredSuggestions]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[showSuggestions,setShowSuggestions]=useState(false);const[sortBy,setSortBy]=useState('name');const[sortOrder,setSortOrder]=useState('asc');// Fetch all Pokémon names for partial matching\nuseEffect(()=>{const fetchPokemonNames=async()=>{try{const response=await fetch('https://pokeapi.co/api/v2/pokemon?limit=1302&_t='+Date.now());const data=await response.json();setAllPokemon(data.results);}catch(err){console.error('Failed to fetch Pokémon names:',err);}};fetchPokemonNames();},[]);// Re-sort existing results when sorting options change\nuseEffect(()=>{if(pokemonList.length>0){const sortedResults=sortPokemonList(pokemonList);setPokemonList(sortedResults);}},[sortBy,sortOrder]);const getStatValue=(pokemon,statName)=>{const stat=pokemon.stats.find(s=>s.stat.name===statName);return stat?stat.base_stat:0;};const getFallbackSprite=pokemon=>{var _pokemon$sprites$othe,_pokemon$sprites$othe2,_pokemon$sprites$othe3,_pokemon$sprites$othe4;// Try multiple sprite sources first\nconst spriteSources=[pokemon.sprites.front_default,(_pokemon$sprites$othe=pokemon.sprites.other)===null||_pokemon$sprites$othe===void 0?void 0:(_pokemon$sprites$othe2=_pokemon$sprites$othe.home)===null||_pokemon$sprites$othe2===void 0?void 0:_pokemon$sprites$othe2.front_default,(_pokemon$sprites$othe3=pokemon.sprites.other)===null||_pokemon$sprites$othe3===void 0?void 0:(_pokemon$sprites$othe4=_pokemon$sprites$othe3.official_artwork)===null||_pokemon$sprites$othe4===void 0?void 0:_pokemon$sprites$othe4.front_default,pokemon.sprites.front_shiny].filter(Boolean);if(spriteSources.length>0){return spriteSources[0];}// For Koraidon variants, use base Koraidon sprite\nif(pokemon.name.includes('koraidon')){return'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1007.png';}// For Miraidon variants, use base Miraidon sprite\nif(pokemon.name.includes('miraidon')){return'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1008.png';}// For special Pikachu forms, use base Pikachu sprite\nif(pokemon.name.includes('pikachu')&&pokemon.name!=='pikachu'){return'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png';}// For Toxtricity variants, use base Toxtricity sprite\nif(pokemon.name.includes('toxtricity')&&pokemon.name!=='toxtricity'){return'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/849.png';}// For Morpeko variants, use base Morpeko sprite\nif(pokemon.name.includes('morpeko')&&pokemon.name!=='morpeko'){return'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/877.png';}// For Voltorb/Electrode Hisui forms, use base forms\nif(pokemon.name.includes('voltorb-hisui')){return'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/100.png';}if(pokemon.name.includes('electrode-hisui')){return'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/101.png';}// For Togedemaru variants, use base Togedemaru sprite\nif(pokemon.name.includes('togedemaru')&&pokemon.name!=='togedemaru'){return'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/777.png';}// For other Pokémon, try the standard sprite\nreturn\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\".concat(pokemon.id,\".png\");};const sortPokemonList=list=>{return[...list].sort((a,b)=>{let aValue;let bValue;switch(sortBy){case'name':aValue=a.name.toLowerCase();bValue=b.name.toLowerCase();break;case'hp':aValue=getStatValue(a,'hp');bValue=getStatValue(b,'hp');break;case'attack':aValue=getStatValue(a,'attack');bValue=getStatValue(b,'attack');break;case'defense':aValue=getStatValue(a,'defense');bValue=getStatValue(b,'defense');break;default:aValue=a.name.toLowerCase();bValue=b.name.toLowerCase();}if(aValue<bValue)return sortOrder==='asc'?-1:1;if(aValue>bValue)return sortOrder==='asc'?1:-1;return 0;});};const searchPokemon=async name=>{if(!name.trim()){setPokemon(null);setPokemonList([]);setError(null);return;}setLoading(true);setError(null);setShowSuggestions(false);try{// First try exact match\nconst exactResponse=await fetch(\"https://pokeapi.co/api/v2/pokemon/\".concat(name.toLowerCase()));if(exactResponse.ok){const exactData=await exactResponse.json();setPokemon(exactData);setPokemonList([]);return;}// If exact match fails, try partial matching\nconst filteredSuggestions=allPokemon.filter(p=>p.name.toLowerCase().includes(name.toLowerCase()));if(filteredSuggestions.length===0){throw new Error('No Pokémon found matching your search');}if(filteredSuggestions.length===1){// Single match - fetch its details\nconst response=await fetch(filteredSuggestions[0].url);const data=await response.json();setPokemon(data);setPokemonList([]);}else{// Multiple matches - fetch details for all\nconst promises=filteredSuggestions.slice(0,10).map(async p=>{const response=await fetch(p.url);return response.json();});const results=await Promise.all(promises);const sortedResults=sortPokemonList(results);setPokemonList(sortedResults);setPokemon(null);}}catch(err){setError(err instanceof Error?err.message:'An error occurred');setPokemon(null);setPokemonList([]);}finally{setLoading(false);}};const handleSuggestionClick=suggestion=>{setSearchTerm(suggestion.name);setShowSuggestions(false);searchPokemon(suggestion.name);};const handleInputChange=e=>{const value=e.target.value;setSearchTerm(value);if(value.length>0){const filtered=allPokemon.filter(p=>p.name.toLowerCase().includes(value.toLowerCase())).slice(0,5);setFilteredSuggestions(filtered);setShowSuggestions(true);}else{setShowSuggestions(false);}};const handleSearch=e=>{e.preventDefault();searchPokemon(searchTerm);};const renderPokemonCard=pokemon=>{var _pokemon$sprites$othe5,_pokemon$sprites$othe6,_pokemon$sprites$othe7,_pokemon$sprites$othe8;return/*#__PURE__*/_jsxs(\"div\",{className:\"pokemon-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"pokemon-image\",children:/*#__PURE__*/_jsx(\"img\",{src:pokemon.sprites.front_default||((_pokemon$sprites$othe5=pokemon.sprites.other)===null||_pokemon$sprites$othe5===void 0?void 0:(_pokemon$sprites$othe6=_pokemon$sprites$othe5.home)===null||_pokemon$sprites$othe6===void 0?void 0:_pokemon$sprites$othe6.front_default)||((_pokemon$sprites$othe7=pokemon.sprites.other)===null||_pokemon$sprites$othe7===void 0?void 0:(_pokemon$sprites$othe8=_pokemon$sprites$othe7.official_artwork)===null||_pokemon$sprites$othe8===void 0?void 0:_pokemon$sprites$othe8.front_default)||getFallbackSprite(pokemon),alt:pokemon.name,className:\"pokemon-sprite\",onError:e=>{const target=e.target;target.src=getFallbackSprite(pokemon);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"pokemon-details\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"pokemon-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"info-column name-column\",children:/*#__PURE__*/_jsxs(\"h3\",{className:\"pokemon-name\",children:[pokemon.name.charAt(0).toUpperCase()+pokemon.name.slice(1),\" \",/*#__PURE__*/_jsxs(\"span\",{className:\"pokemon-id\",children:[\"#\",pokemon.id]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-column\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"HP:\"}),\" \",getStatValue(pokemon,'hp')]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Attack:\"}),\" \",getStatValue(pokemon,'attack')]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-column\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Defense:\"}),\" \",getStatValue(pokemon,'defense')]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Types:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"pokemon-types\",children:pokemon.types.map(type=>/*#__PURE__*/_jsx(\"span\",{className:\"type-badge\",children:type.type.name.charAt(0).toUpperCase()+type.type.name.slice(1)},type.type.name))})]})]})]})})]},pokemon.id);};return/*#__PURE__*/_jsxs(\"div\",{className:\"list-view\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"website-header\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"website-title\",children:\"Pok\\xE9dex Explorer\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"nav-button active\",children:\"List View\"}),/*#__PURE__*/_jsx(Link,{to:\"/gallery\",className:\"nav-button\",children:\"Gallery View\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"list-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Pok\\xE9mon Search\"}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSearch,className:\"search-form\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"search-input-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search-wrapper\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:searchTerm,onChange:handleInputChange,placeholder:\"Enter Pok\\xE9mon name (e.g., pikachu, char, water)\",className:\"search-input\",autoComplete:\"off\"}),showSuggestions&&filteredSuggestions.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"suggestions-dropdown\",children:filteredSuggestions.map(suggestion=>/*#__PURE__*/_jsx(\"div\",{className:\"suggestion-item\",onClick:()=>handleSuggestionClick(suggestion),children:suggestion.name.charAt(0).toUpperCase()+suggestion.name.slice(1)},suggestion.name))})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"search-button\",disabled:loading,children:loading?'Searching...':'Search'})]})}),(pokemonList.length>0||pokemon)&&/*#__PURE__*/_jsx(\"div\",{className:\"sorting-bar\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"sorting-controls\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"sort-by\",className:\"sort-label\",children:\"Sort by:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"sort-by\",value:sortBy,onChange:e=>setSortBy(e.target.value),className:\"sort-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"name\",children:\"Name\"}),/*#__PURE__*/_jsx(\"option\",{value:\"hp\",children:\"HP\"}),/*#__PURE__*/_jsx(\"option\",{value:\"attack\",children:\"Attack\"}),/*#__PURE__*/_jsx(\"option\",{value:\"defense\",children:\"Defense\"})]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"sort-order\",className:\"sort-label\",children:\"Order:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"sort-order\",value:sortOrder,onChange:e=>setSortOrder(e.target.value),className:\"sort-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"asc\",children:\"Ascending\"}),/*#__PURE__*/_jsx(\"option\",{value:\"desc\",children:\"Descending\"})]})]})}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),pokemon&&/*#__PURE__*/_jsx(\"div\",{className:\"pokemon-result\",children:renderPokemonCard(pokemon)}),pokemonList.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"pokemon-results\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Search Results (\",pokemonList.length,\" found)\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"pokemon-grid\",children:pokemonList.map(renderPokemonCard)})]})]})]});};export default ListView;","map":{"version":3,"names":["React","useState","useEffect","Link","jsx","_jsx","jsxs","_jsxs","ListView","searchTerm","setSearchTerm","pokemon","setPokemon","pokemonList","setPokemonList","allPokemon","setAllPokemon","filteredSuggestions","setFilteredSuggestions","loading","setLoading","error","setError","showSuggestions","setShowSuggestions","sortBy","setSortBy","sortOrder","setSortOrder","fetchPokemonNames","response","fetch","Date","now","data","json","results","err","console","length","sortedResults","sortPokemonList","getStatValue","statName","stat","stats","find","s","name","base_stat","getFallbackSprite","_pokemon$sprites$othe","_pokemon$sprites$othe2","_pokemon$sprites$othe3","_pokemon$sprites$othe4","spriteSources","sprites","front_default","other","home","official_artwork","front_shiny","filter","Boolean","includes","concat","id","list","sort","a","b","aValue","bValue","toLowerCase","searchPokemon","trim","exactResponse","ok","exactData","p","Error","url","promises","slice","map","Promise","all","message","handleSuggestionClick","suggestion","handleInputChange","e","value","target","filtered","handleSearch","preventDefault","renderPokemonCard","_pokemon$sprites$othe5","_pokemon$sprites$othe6","_pokemon$sprites$othe7","_pokemon$sprites$othe8","className","children","src","alt","onError","charAt","toUpperCase","types","type","to","onSubmit","onChange","placeholder","autoComplete","onClick","disabled","htmlFor"],"sources":["/Users/wenmeiqi/Library/Mobile Documents/com~apple~CloudDocs/CS409/mp/mp2/src/components/ListView.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface Pokemon {\n  id: number;\n  name: string;\n  height: number;\n  weight: number;\n  types: Array<{\n    type: {\n      name: string;\n    };\n  }>;\n  sprites: {\n    front_default: string | null;\n    front_shiny: string | null;\n    other?: {\n      home?: {\n        front_default: string | null;\n      };\n      official_artwork?: {\n        front_default: string | null;\n      };\n    };\n  };\n  stats: Array<{\n    base_stat: number;\n    stat: {\n      name: string;\n    };\n  }>;\n}\n\ninterface PokemonListItem {\n  name: string;\n  url: string;\n}\n\nconst ListView: React.FC = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [pokemon, setPokemon] = useState<Pokemon | null>(null);\n  const [pokemonList, setPokemonList] = useState<Pokemon[]>([]);\n  const [allPokemon, setAllPokemon] = useState<PokemonListItem[]>([]);\n  const [filteredSuggestions, setFilteredSuggestions] = useState<PokemonListItem[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [sortBy, setSortBy] = useState<'name' | 'hp' | 'attack' | 'defense'>('name');\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('asc');\n\n  // Fetch all Pokémon names for partial matching\n  useEffect(() => {\n    const fetchPokemonNames = async () => {\n      try {\n        const response = await fetch('https://pokeapi.co/api/v2/pokemon?limit=1302&_t=' + Date.now());\n        const data = await response.json();\n        setAllPokemon(data.results);\n      } catch (err) {\n        console.error('Failed to fetch Pokémon names:', err);\n      }\n    };\n    fetchPokemonNames();\n  }, []);\n\n  // Re-sort existing results when sorting options change\n  useEffect(() => {\n    if (pokemonList.length > 0) {\n      const sortedResults = sortPokemonList(pokemonList);\n      setPokemonList(sortedResults);\n    }\n  }, [sortBy, sortOrder]);\n\n  const getStatValue = (pokemon: Pokemon, statName: string): number => {\n    const stat = pokemon.stats.find(s => s.stat.name === statName);\n    return stat ? stat.base_stat : 0;\n  };\n\n  const getFallbackSprite = (pokemon: Pokemon): string => {\n    // Try multiple sprite sources first\n    const spriteSources = [\n      pokemon.sprites.front_default,\n      pokemon.sprites.other?.home?.front_default,\n      pokemon.sprites.other?.official_artwork?.front_default,\n      pokemon.sprites.front_shiny\n    ].filter(Boolean);\n\n    if (spriteSources.length > 0) {\n      return spriteSources[0] as string;\n    }\n\n    // For Koraidon variants, use base Koraidon sprite\n    if (pokemon.name.includes('koraidon')) {\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1007.png';\n    }\n    // For Miraidon variants, use base Miraidon sprite\n    if (pokemon.name.includes('miraidon')) {\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1008.png';\n    }\n    // For special Pikachu forms, use base Pikachu sprite\n    if (pokemon.name.includes('pikachu') && pokemon.name !== 'pikachu') {\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png';\n    }\n    // For Toxtricity variants, use base Toxtricity sprite\n    if (pokemon.name.includes('toxtricity') && pokemon.name !== 'toxtricity') {\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/849.png';\n    }\n    // For Morpeko variants, use base Morpeko sprite\n    if (pokemon.name.includes('morpeko') && pokemon.name !== 'morpeko') {\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/877.png';\n    }\n    // For Voltorb/Electrode Hisui forms, use base forms\n    if (pokemon.name.includes('voltorb-hisui')) {\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/100.png';\n    }\n    if (pokemon.name.includes('electrode-hisui')) {\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/101.png';\n    }\n    // For Togedemaru variants, use base Togedemaru sprite\n    if (pokemon.name.includes('togedemaru') && pokemon.name !== 'togedemaru') {\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/777.png';\n    }\n    // For other Pokémon, try the standard sprite\n    return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`;\n  };\n\n  const sortPokemonList = (list: Pokemon[]) => {\n    return [...list].sort((a, b) => {\n      let aValue: string | number;\n      let bValue: string | number;\n\n      switch (sortBy) {\n        case 'name':\n          aValue = a.name.toLowerCase();\n          bValue = b.name.toLowerCase();\n          break;\n        case 'hp':\n          aValue = getStatValue(a, 'hp');\n          bValue = getStatValue(b, 'hp');\n          break;\n        case 'attack':\n          aValue = getStatValue(a, 'attack');\n          bValue = getStatValue(b, 'attack');\n          break;\n        case 'defense':\n          aValue = getStatValue(a, 'defense');\n          bValue = getStatValue(b, 'defense');\n          break;\n        default:\n          aValue = a.name.toLowerCase();\n          bValue = b.name.toLowerCase();\n      }\n\n      if (aValue < bValue) return sortOrder === 'asc' ? -1 : 1;\n      if (aValue > bValue) return sortOrder === 'asc' ? 1 : -1;\n      return 0;\n    });\n  };\n\n  const searchPokemon = async (name: string) => {\n    if (!name.trim()) {\n      setPokemon(null);\n      setPokemonList([]);\n      setError(null);\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n    setShowSuggestions(false);\n    \n    try {\n      // First try exact match\n      const exactResponse = await fetch(`https://pokeapi.co/api/v2/pokemon/${name.toLowerCase()}`);\n      \n      if (exactResponse.ok) {\n        const exactData = await exactResponse.json();\n        setPokemon(exactData);\n        setPokemonList([]);\n        return;\n      }\n\n      // If exact match fails, try partial matching\n      const filteredSuggestions = allPokemon.filter(p => \n        p.name.toLowerCase().includes(name.toLowerCase())\n      );\n\n      if (filteredSuggestions.length === 0) {\n        throw new Error('No Pokémon found matching your search');\n      }\n\n      if (filteredSuggestions.length === 1) {\n        // Single match - fetch its details\n        const response = await fetch(filteredSuggestions[0].url);\n        const data = await response.json();\n        setPokemon(data);\n        setPokemonList([]);\n      } else {\n        // Multiple matches - fetch details for all\n        const promises = filteredSuggestions.slice(0, 10).map(async (p) => {\n          const response = await fetch(p.url);\n          return response.json();\n        });\n        \n        const results = await Promise.all(promises);\n        const sortedResults = sortPokemonList(results);\n        setPokemonList(sortedResults);\n        setPokemon(null);\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'An error occurred');\n      setPokemon(null);\n      setPokemonList([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSuggestionClick = (suggestion: PokemonListItem) => {\n    setSearchTerm(suggestion.name);\n    setShowSuggestions(false);\n    searchPokemon(suggestion.name);\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setSearchTerm(value);\n    \n    if (value.length > 0) {\n      const filtered = allPokemon.filter(p => \n        p.name.toLowerCase().includes(value.toLowerCase())\n      ).slice(0, 5);\n      setFilteredSuggestions(filtered);\n      setShowSuggestions(true);\n    } else {\n      setShowSuggestions(false);\n    }\n  };\n\n  const handleSearch = (e: React.FormEvent) => {\n    e.preventDefault();\n    searchPokemon(searchTerm);\n  };\n\n  const renderPokemonCard = (pokemon: Pokemon) => (\n    <div key={pokemon.id} className=\"pokemon-card\">\n      <div className=\"pokemon-image\">\n        <img \n          src={pokemon.sprites.front_default || pokemon.sprites.other?.home?.front_default || pokemon.sprites.other?.official_artwork?.front_default || getFallbackSprite(pokemon)}\n          alt={pokemon.name}\n          className=\"pokemon-sprite\"\n          onError={(e) => {\n            const target = e.target as HTMLImageElement;\n            target.src = getFallbackSprite(pokemon);\n          }}\n        />\n      </div>\n      <div className=\"pokemon-details\">\n        <div className=\"pokemon-info\">\n          <div className=\"info-column name-column\">\n            <h3 className=\"pokemon-name\">\n              {pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)} <span className=\"pokemon-id\">#{pokemon.id}</span>\n            </h3>\n          </div>\n          <div className=\"info-column\">\n            <p><strong>HP:</strong> {getStatValue(pokemon, 'hp')}</p>\n            <p><strong>Attack:</strong> {getStatValue(pokemon, 'attack')}</p>\n          </div>\n          <div className=\"info-column\">\n            <p><strong>Defense:</strong> {getStatValue(pokemon, 'defense')}</p>\n            <p>\n              <strong>Types:</strong>\n              <span className=\"pokemon-types\">\n                {pokemon.types.map(type => (\n                  <span key={type.type.name} className=\"type-badge\">\n                    {type.type.name.charAt(0).toUpperCase() + type.type.name.slice(1)}\n                  </span>\n                ))}\n              </span>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"list-view\">\n      <div className=\"website-header\">\n        <h1 className=\"website-title\">Pokédex Explorer</h1>\n      </div>\n      <div className=\"button-container\">\n        <Link to=\"/\" className=\"nav-button active\">\n          List View\n        </Link>\n        <Link to=\"/gallery\" className=\"nav-button\">\n          Gallery View\n        </Link>\n      </div>\n      \n      <div className=\"list-container\">\n        <h2>Pokémon Search</h2>\n        \n        <form onSubmit={handleSearch} className=\"search-form\">\n          <div className=\"search-input-container\">\n            <div className=\"search-wrapper\">\n              <input\n                type=\"text\"\n                value={searchTerm}\n                onChange={handleInputChange}\n                placeholder=\"Enter Pokémon name (e.g., pikachu, char, water)\"\n                className=\"search-input\"\n                autoComplete=\"off\"\n              />\n              {showSuggestions && filteredSuggestions.length > 0 && (\n                <div className=\"suggestions-dropdown\">\n                  {filteredSuggestions.map((suggestion) => (\n                    <div\n                      key={suggestion.name}\n                      className=\"suggestion-item\"\n                      onClick={() => handleSuggestionClick(suggestion)}\n                    >\n                      {suggestion.name.charAt(0).toUpperCase() + suggestion.name.slice(1)}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n            <button type=\"submit\" className=\"search-button\" disabled={loading}>\n              {loading ? 'Searching...' : 'Search'}\n            </button>\n          </div>\n        </form>\n\n        {(pokemonList.length > 0 || pokemon) && (\n          <div className=\"sorting-bar\">\n            <div className=\"sorting-controls\">\n              <label htmlFor=\"sort-by\" className=\"sort-label\">Sort by:</label>\n                  <select\n                    id=\"sort-by\"\n                    value={sortBy}\n                    onChange={(e) => setSortBy(e.target.value as 'name' | 'hp' | 'attack' | 'defense')}\n                    className=\"sort-select\"\n                  >\n                    <option value=\"name\">Name</option>\n                    <option value=\"hp\">HP</option>\n                    <option value=\"attack\">Attack</option>\n                    <option value=\"defense\">Defense</option>\n                  </select>\n              \n              <label htmlFor=\"sort-order\" className=\"sort-label\">Order:</label>\n              <select\n                id=\"sort-order\"\n                value={sortOrder}\n                onChange={(e) => setSortOrder(e.target.value as 'asc' | 'desc')}\n                className=\"sort-select\"\n              >\n                <option value=\"asc\">Ascending</option>\n                <option value=\"desc\">Descending</option>\n              </select>\n            </div>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"error-message\">\n            {error}\n          </div>\n        )}\n\n        {pokemon && (\n          <div className=\"pokemon-result\">\n            {renderPokemonCard(pokemon)}\n          </div>\n        )}\n\n        {pokemonList.length > 0 && (\n          <div className=\"pokemon-results\">\n            <h3>Search Results ({pokemonList.length} found)</h3>\n            <div className=\"pokemon-grid\">\n              {pokemonList.map(renderPokemonCard)}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ListView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}